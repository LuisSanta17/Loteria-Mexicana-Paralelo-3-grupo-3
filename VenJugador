/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;
import modelo.Alineacion;
import modelo.Jugador;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.control.Label;
import javafx.scene.effect.DropShadow;
import javafx.scene.image.ImageView;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.paint.Paint;
import javafx.scene.text.Font;
import javafx.scene.text.TextAlignment;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.application.Application;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

/**
 *
 * @author 59399
 */
public class VenJugador extends Application{
    private final AnchorPane root = new AnchorPane();
    private final Button jugar = new Button ("Jugar");
    private final Button regresar = new Button ("Regresar");
    private final ImageView fondo = new ImageView("/imagen/imagen3.png");
    private final ImageView titulo = new ImageView("/imagen/imagen4.png");
    private final Label lblNombre = new Label("Nombre del jugador: ");
    private final TextField nombre = new TextField();
    private final Label lblAlineacion = new Label("Alineacion del juego: ");
    private final TextField alineacion = new TextField();
   
    public VenJugador() {
        organizarRoot();
    }
    private void organizarRoot(){
        fondo.autosize();
        fondo.setFitHeight(560);
        fondo.setFitWidth(460);
        titulo.autosize();
        titulo.setFitWidth(460);
        titulo.setFitHeight(200);
        root.getChildren().addAll(fondo,titulo);
        ordenarBotones();
        AnchorPane.setTopAnchor(lblNombre, 220.0);
        AnchorPane.setLeftAnchor(lblNombre, 30.0);
        lblNombre.setFont(Font.loadFont("file:src/imagen/imagen5.TTF", 35));
        lblNombre.setTextFill(Color.WHITE );
        AnchorPane.setTopAnchor(nombre, 220.0);
        AnchorPane.setLeftAnchor(nombre, 240.0);
        nombre.setFont(Font.loadFont("file:src/imagen/imagen6.TTF", 20));
        nombre.setAlignment(Pos.CENTER);
        AnchorPane.setTopAnchor(lblAlineacion, 290.0);
        AnchorPane.setLeftAnchor(lblAlineacion, 30.0);
        lblAlineacion.setFont(Font.loadFont("file:src/imagen/imagen7.TTF", 35));
        lblAlineacion.setTextFill(Color.WHITE );
        AnchorPane.setTopAnchor(alineacion, 295.0);
        AnchorPane.setLeftAnchor(alineacion, 240.0);
        alineacion.setAlignment(Pos.CENTER);
        alineacion.setStyle("-fx-background-color: #fdfdfd");
        alineacion.setDisable(true);
        alineacion.setFont(Font.loadFont("file:src/imagen/imagen8.TTF", 20));
        root.getChildren().addAll(lblNombre,nombre,lblAlineacion,alineacion);   
    }
    private Alineacion elegirAlineacion(){
             Alineacion [] arrAl;
            arrAl = Alineacion.values();
            Random rd = new Random();
        int indice = rd.nextInt(4);
        return arrAl[indice];
    } 
    private boolean validarNombre(){       
        if (nombre.getText().trim().isEmpty()){
            Alert a = new Alert (Alert.AlertType.ERROR,"Ingrese el nombre del jugador: ");
            a.setHeaderText("Para continuar ingrese el nombre del jugador");
            a.setTitle("Error");
            a.show();
        }
        return nombre.getText().trim().isEmpty();
    }
    private void ordenarBotones(){
        HBox botones = new HBox(15);
        List<Button> arrBotones = Arrays.asList(jugar,regresar);
        botones.setAlignment(Pos.CENTER);
        arrBotones.forEach(b->{
        b.setMaxWidth(150);
        b.setMinWidth(150);
        b.setMaxHeight(60);
        b.setMinHeight(60);
        b.setTextAlignment(TextAlignment.CENTER);
        b.setFont(Font.loadFont("file:src/imagen/imagen7.TTF", 35));
        b.setStyle("-fx-background-color: #5D5D5D");
        b.setAlignment(Pos.CENTER);
        b.setEffect(new DropShadow());
        b.setTextFill(Color.WHITE );
        botones.getChildren().add(b);
        });        
        AnchorPane.setTopAnchor(botones, 450.0);
        AnchorPane.setLeftAnchor(botones, 80.0);
        root.getChildren().add(botones);
    }
    private void configBotones(Stage actual){
      List<Button> arrBotones = Arrays.asList(jugar,regresar);
        arrBotones.forEach(b->{
            b.setOnMouseEntered(e->b.setStyle("-fx-background-color: #ECB939"));
            b.setOnMouseExited(e->b.setStyle("-fx-background-color: #5D5D5D"));
        });
        jugar.setOnMouseReleased(e->{
            boolean validar = validarNombre();
            if (!validar){
                try {
                    NewJuego nj = new NewJuego();        
                    Thread.sleep(500);                                       
                    actual.close(); 
                } catch (InterruptedException ex) {
                    System.err.println("Error inesperado");
                }
            }
            });
        regresar.setOnAction(e->{ 
            VenPrincipal vp = new VenPrincipal();        
            actual.close();
            vp.start(new Stage()); });
        
    }

    @Override
    public void start(Stage primaryStage) {
        configBotones(primaryStage);
        Scene scene = new Scene(root,450,550);
        primaryStage.setResizable(false);
        primaryStage.setTitle("DATOS DEL JUGADOR");
        primaryStage.initStyle(StageStyle.UTILITY);
        primaryStage.initStyle(StageStyle.UNDECORATED);
        scene.setFill(Color.TRANSPARENT);
        primaryStage.setScene(scene);
        primaryStage.show();
    }
    public AnchorPane getRoot() {
        return root;
    }
}
