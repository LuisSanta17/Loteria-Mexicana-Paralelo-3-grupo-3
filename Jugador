package modelo;
import java.io.Serializable;
import java.util.Objects;

public class Jugador implements Serializable{
    private String nombre;
    private Cartilla cartilla;
    private Alineacion alineacion;
    public Jugador(String nombre, Alineacion alineacion) {
        this.nombre = nombre;
        this.alineacion = alineacion;
        cartilla = new Cartilla();
    }
    public boolean validarAlineacion(){
        String a = alineacion.name();
        int x =0;
        switch (a) {
            case "FILA":
                for (int i = 0; i < 4; i++) {
                    if(cartilla.getArrCartilla().get(x).isSeleccionada()&cartilla.getArrCartilla().get(x+1).isSeleccionada()&cartilla.getArrCartilla().get(x+2).isSeleccionada()&cartilla.getArrCartilla().get(x+3).isSeleccionada()){
                        return true;
                    }
                    x+=4;
                }
                break;
            case "COLUMNA":                
                for (int i = 0; i < 4; i++) {
                    if(cartilla.getArrCartilla().get(i).isSeleccionada()&cartilla.getArrCartilla().get(i+4).isSeleccionada()&cartilla.getArrCartilla().get(i+8).isSeleccionada()&cartilla.getArrCartilla().get(i+12).isSeleccionada()){
                        return true;
                    }
                }
                break;
            case "ESQUINA":
                if(cartilla.getArrCartilla().get(0).isSeleccionada()&cartilla.getArrCartilla().get(3).isSeleccionada()&cartilla.getArrCartilla().get(12).isSeleccionada() &cartilla.getArrCartilla().get(15).isSeleccionada()){
                    return true;
                    }
                break;
            case "JUNTAS":
                if(cartilla.getArrCartilla().get(0).isSeleccionada()&cartilla.getArrCartilla().get(1).isSeleccionada()&cartilla.getArrCartilla().get(4).isSeleccionada()&cartilla.getArrCartilla().get(5).isSeleccionada()){
                    return true;
                }
                if(cartilla.getArrCartilla().get(2).isSeleccionada()&cartilla.getArrCartilla().get(3).isSeleccionada()&cartilla.getArrCartilla().get(6).isSeleccionada()&cartilla.getArrCartilla().get(7).isSeleccionada()){
                    return true;
                }
                if(cartilla.getArrCartilla().get(8).isSeleccionada()&cartilla.getArrCartilla().get(9).isSeleccionada()&cartilla.getArrCartilla().get(12).isSeleccionada()&cartilla.getArrCartilla().get(13).isSeleccionada()){
                    return true;
                }
                if(cartilla.getArrCartilla().get(10).isSeleccionada()&cartilla.getArrCartilla().get(11).isSeleccionada()&cartilla.getArrCartilla().get(14).isSeleccionada()&cartilla.getArrCartilla().get(15).isSeleccionada()){
                    return true;
                } 
                break;                
            default: break;
        }
        return false;
    }
    
    @Override
    public int hashCode() {
        int hash = 5;
        hash = 59 * hash + Objects.hashCode(this.nombre);
        return hash;
    }
    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Jugador other = (Jugador) obj;
        if (!Objects.equals(this.nombre, other.nombre)) {
            return false;
        }
        return true;
    }
    @Override
    public String toString() {
        return "Jugador{" + "nombre=" + nombre + '}';
    }
    
     public String getNombre() {
        return nombre;
    }
    public Cartilla getCartilla() {
        return cartilla;
    }
    public Alineacion getAlineacion() {
        return alineacion;
    }
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    public void setCartilla(Cartilla cartilla) {
        this.cartilla = cartilla;
    }
    public void setAlineacion(Alineacion alineacion) {
        this.alineacion = alineacion;
    }
}
